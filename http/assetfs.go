// Code generated by go-bindata.
// sources:
// www/static/javascript/things.api.js
// www/static/javascript/things.init.js
// www/static/javascript/things.placeholder.client.js
// DO NOT EDIT!

package http

import (
	"github.com/whosonfirst/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptThingsApiJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xdd\x6a\xdc\x3c\x10\xbd\xb6\x9f\x62\x3e\xdd\x58\xe6\x33\x4e\x08\xbd\x49\xb6\x2e\x04\x92\xb6\x94\xb4\x29\xc9\x42\x0b\x21\x2c\xaa\x35\xbb\x11\x38\x92\x33\x92\xf3\xc3\xc6\xef\x5e\x24\xff\x6e\x92\x96\xde\xc9\x9a\x33\x67\x8e\xce\xcc\xf8\x5e\x10\xb8\x1b\xa5\x37\x16\x8a\xe1\xf0\xfc\x0c\xdb\x76\x11\xc7\xdd\x67\x2e\x6a\x05\x05\xf0\x75\xa3\x4b\xa7\x8c\xe6\xe9\x36\x8e\x01\x00\x7c\x2a\x6a\x59\x1b\xa5\x1d\x14\x50\x99\x52\xf8\x78\x6e\x48\x6d\x94\x5e\x04\xcc\x08\xb4\x58\xad\xa1\x80\x6d\x1c\x47\x89\x90\x32\x39\x82\x91\x4f\x62\xad\x4a\x67\x57\x4a\x66\xe0\xf0\xd1\x65\x60\xf4\xca\x36\x65\x89\xd6\x86\x33\x12\x19\xf2\x55\xa3\x81\x6d\x6d\xe8\x76\x25\x85\x13\x50\x80\xc6\x07\xf8\x68\xe8\xf6\x44\x38\xc1\xd3\x45\x07\x1a\x01\x57\x4c\x49\x76\x0d\x05\x4c\x55\x5e\x43\x7c\x55\x76\x5d\x84\xea\x7d\x74\xaa\x65\xf4\xaa\x32\x42\x42\x31\x29\x26\x5b\x07\x39\x51\x70\x4f\xd0\x06\xbd\x01\x64\xeb\xbc\xfb\x58\xc4\x51\x14\x47\x91\x5a\x03\xef\x2e\x72\x42\x21\x9f\x2e\x9d\x70\x08\xff\x15\xf0\x2e\xdd\xc6\x51\x28\x40\xe8\x1a\xd2\x1e\xdf\x76\x39\xc1\x2b\x27\x5c\x63\x57\xa5\x91\xe8\x9b\x12\x18\xae\x92\xee\x36\xb9\x5e\xec\xa2\xbc\xe6\x57\xa8\x25\x3e\xba\x0e\xd9\xcb\xe0\x73\xce\xf7\x70\xb0\xbf\x9f\xfa\x36\xef\x5c\x7f\x80\x83\xc3\xc3\x74\x94\x36\x18\xcf\xb7\x89\x0f\x27\x47\x73\x5d\x19\x24\xb7\x68\xad\xd8\xcc\xee\xbd\x92\xd6\x37\xe0\xed\x97\x39\x7a\x82\x81\xdb\xeb\x27\xf1\x30\xd3\x4d\x68\x6b\xa3\x2d\x4e\xca\x3d\xae\x34\xda\x9a\x0a\xf3\xca\x6c\x38\xbb\x38\xfe\xc1\x32\x9f\x36\xd6\x98\xb1\xf5\xc3\xf0\xe5\xf2\xfc\x5b\x5e\x0b\xb2\xc8\xe7\xc0\x1d\x9e\x93\xe3\xe5\x31\xcb\x42\xc6\x4b\xa6\x69\xf0\xf8\x18\x6e\xa1\x14\xae\xbc\x01\x8e\x29\xbc\xf2\x06\xd3\xe9\x85\x3e\xd0\xbe\x35\x3e\x6b\xa1\x2a\xdc\x19\x20\x0c\x2e\xef\xb2\xfc\x31\x5d\xfc\x32\xe4\xe6\xd9\xff\x9c\xdc\x90\xdf\xdc\x71\x47\xff\x07\xb6\x27\xa4\xdc\x63\x8b\x7e\x95\xba\x96\xc4\x51\xb4\xe3\xcf\xa7\xd3\x25\xcb\x1a\x52\xe9\x30\x69\x84\x77\xfd\x9e\xfd\xfc\x7a\xf6\xd9\xb9\xfa\x02\xef\x1a\xb4\x2e\x6c\x9b\x6f\x2d\xe1\x5d\x2e\xa4\x3c\xbd\x47\xed\xce\x94\x75\xa8\x91\x38\xf3\x5b\xc3\xb2\x61\x7f\x02\xf6\x6d\x60\x78\x47\x87\xec\xac\xfa\x0b\x36\x98\xd1\x61\xc3\x71\x2e\xc1\xd4\xa8\x39\xfb\x7e\x7e\xb9\x64\x99\x7f\x7b\x06\x8e\x1a\x1c\xc9\x2c\x6a\xc9\xc7\xad\xef\x13\x83\x71\x2f\x3a\xfc\xa2\xbb\xdd\x24\xc3\x5a\x54\x16\x07\xab\x07\xa7\xdb\x2c\xee\xad\x8f\xa7\xa1\x0f\x3f\xbb\xfe\xff\xd7\xa6\xde\xa5\xdf\x01\x00\x00\xff\xff\xbd\x81\xda\x6c\x66\x05\x00\x00")

func staticJavascriptThingsApiJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptThingsApiJs,
		"static/javascript/things.api.js",
	)
}

func staticJavascriptThingsApiJs() (*asset, error) {
	bytes, err := staticJavascriptThingsApiJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/things.api.js", size: 1382, mode: os.FileMode(420), modTime: time.Unix(1580073463, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptThingsInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x5b\x6f\xdb\x36\x14\x7e\x26\x7f\x05\xc1\x27\x09\x76\x95\x02\x7b\x54\xf3\x90\x65\x5e\x13\xac\x4b\x00\xd7\xc3\x56\x14\x45\x40\x8b\xc7\x36\x11\x9a\xd4\x48\x2a\x99\x11\xf8\xbf\x0f\xbc\xe8\x16\x39\x0e\xfa\x64\x8b\x3c\xdf\xf9\x0e\xcf\xed\x7b\x16\x8a\xeb\xe7\x82\x71\xbe\x78\x02\xe5\xbe\x08\xeb\x40\x81\xc9\xa8\xd4\x8c\xd3\x39\xd9\x34\xaa\x72\x42\x2b\xe2\xbf\x33\xf0\x36\xf9\x0b\xc6\x84\x10\xf2\xc4\x0c\xa9\x25\xb9\x24\x5c\x57\xcd\x1e\x94\x2b\xb6\xe0\x16\x12\xfc\xdf\x5f\x0f\xb7\x3c\xa3\xb5\x64\x15\xd0\xbc\xec\xed\xff\x6d\xc0\x1c\xce\x41\x82\x01\xcd\x4b\x0f\xe8\x50\x06\x6c\x23\x9d\x3d\x87\x4b\x26\x9e\xac\x45\xb9\x9d\x50\xdb\x87\x8d\x36\xfb\x73\xc0\x60\xf5\xc1\x5b\x4d\xb1\x92\xad\xe1\xec\x03\x23\x38\x98\x4d\xd1\x6b\xcd\xcf\x3e\x35\x82\xbd\xd5\x14\x6b\x9b\xf5\x5e\xb8\xf7\xd1\xd1\x2e\xe5\x2b\xe4\x2c\x38\x1a\x3a\x29\xb4\xaa\xa4\xa8\x1e\xc9\x65\x57\xcc\x2c\x7f\x09\x66\x18\x79\x46\x0e\xb5\xa8\x9c\x7d\x10\x9c\x5c\x0e\x42\xf7\x8c\x57\xce\x19\xb1\x6e\x1c\x64\x94\x33\xc7\x3e\x3c\xef\xb4\xd5\x6a\x23\x8c\x75\x1f\x04\xf7\x61\x07\x0f\x0e\xfe\x73\x63\xec\x13\x93\x0d\x94\x18\xa3\x4a\x2b\xab\x25\x14\x52\x6f\xb3\x9e\x68\x1e\x20\xbe\x31\x90\x33\x07\xf2\x82\x51\x0c\xa7\x4d\x82\x56\x0f\xb6\xa9\x2a\xb0\x76\x18\xb5\xb1\x75\xfe\x82\xd1\xc8\x27\xbd\xff\xe3\xea\x1b\x9d\x13\x7f\x57\x46\x07\xc7\xf2\x84\x3b\x30\x46\x9b\xa1\x33\x30\x66\xea\x6c\xb1\x5c\xde\x2f\xe9\x9c\xf8\xcb\x93\xde\xc2\x13\x6d\xc1\x6a\xe1\x47\x66\xf2\xa2\xf9\x20\xf2\x79\x47\x9b\x77\x2e\x8e\xa4\x62\xae\xda\x91\x0c\xfc\x10\x85\xc3\x11\xff\xd7\xab\xdf\x3c\xbb\x07\x1c\x31\x46\x06\x5c\x63\x14\xd9\x30\x69\x21\x76\xc8\x31\xfe\x74\xdd\xc2\x0d\x7b\x7e\x08\x41\x0d\xdf\xa6\xd8\x1e\xe6\x44\xf0\x40\x92\x26\xa3\xb0\xee\x20\xa1\xe0\xc2\xd6\x92\xf9\xbe\xa4\x4a\x2b\xa0\x25\x46\xfd\x9c\x4c\x6d\xd6\x52\x57\x8f\x34\xd4\xa9\x9f\x88\x42\x28\x05\x66\x15\x8b\x4e\x57\x21\x25\xe4\x96\x48\xf1\x08\x84\xad\x75\xe3\x08\x25\x33\xe2\x83\x28\x31\x6a\x91\xa1\x2d\xec\xbb\x2d\x15\xc2\x2e\x31\xba\xb8\x18\xb6\x53\x20\xbc\x59\xfd\xf9\xc5\x13\xd2\xe0\x75\x94\xb7\xd5\xcd\xed\xdd\xe7\x0e\xfb\x76\xa6\xfa\x45\xd2\x37\x55\x3c\x0a\xa9\xf2\x76\x95\x6e\x94\x7f\x57\x9b\x36\x09\x6a\xeb\x76\x25\x8a\xb7\x52\xd8\xd1\x54\x56\x06\x98\x83\x34\x98\x19\x6d\xc2\x1a\xc0\x68\xa3\x0d\xc9\xbc\xbd\xb8\xfc\x58\x12\x41\x3e\x45\xb7\x25\x11\xb3\x59\x57\xf9\xb0\xd9\x7a\xa6\xef\xe2\xc7\xa4\x71\xc3\x48\x9a\x42\xf0\xb2\x3f\xf3\x79\x0d\xa7\x29\xc1\xfd\x2a\x66\x15\xb8\x43\x1d\x2f\xbb\xaf\x89\xcf\x76\xa9\x45\xf8\xe0\x5c\x28\x60\xdb\x88\x4e\xff\x13\xb6\xbf\x49\xff\xbe\x7f\xfc\xd1\x22\xd3\xf8\xa2\xb8\xa6\xb7\x5e\x29\x3a\xb3\x22\x1e\x94\x18\xa1\x96\x34\xfe\xce\x08\x9d\x87\x1e\x89\x06\xf1\x25\x08\xa5\x81\xeb\x67\x24\x78\xbe\xb8\x18\xcf\xc8\x72\xf1\xf9\xf6\xfe\xae\x1d\x93\x80\x18\x4d\xe8\x20\xa0\x90\xf4\xa0\x37\x6d\x44\xe9\xe4\x4c\x48\xc9\x62\x98\xdd\xf7\x22\xba\xbe\xff\xeb\x6e\xb5\xfc\x36\x0e\x29\xa5\xee\x35\x09\xc9\x3c\x49\x5f\xab\x19\xa1\x39\x9d\xd6\xdd\xc1\xfe\x4c\x9b\x49\x41\x5b\x22\x6f\xf9\x13\x63\xd5\x41\x58\x5d\x83\xe2\xd7\x3b\x21\x79\xf6\x8a\xc6\x0f\xf6\x9d\xe6\x90\x85\xa0\xf3\xbc\x2d\x75\xc0\x9d\x16\x13\x84\xfa\x45\xd4\x6f\x1f\x9f\xe5\xf1\x0a\x3b\xb1\x51\xfd\x44\x8d\xa2\xf1\x34\xed\x02\xfc\x79\xf1\xef\xd6\xdd\xeb\x95\xd1\xdf\x0c\xc9\x3c\x7b\x3e\x5d\xad\xb5\x2c\xb4\x12\xaa\x6e\xdc\x48\x32\x7c\xf9\x63\x50\xa1\xa8\x50\x38\x66\xb6\xe0\xc6\x2a\x08\xf2\xb4\xfa\xd1\xd5\xe2\x9f\x15\xed\x94\x0f\x61\x24\x36\x24\xf3\x5f\x69\xc7\x90\x4f\xe4\x97\x3c\x49\x61\x4c\x5b\xc8\x42\xda\x3c\x67\x25\xd1\x43\x86\x0b\x2e\x4b\x72\x78\x2c\x71\x87\x7e\x4b\x01\xdf\x12\xa1\x28\x81\xc7\xc9\x33\xbe\x2e\xae\x96\xd7\x37\xf4\xb4\x84\x27\x7d\x0c\xfd\xbd\xd3\x92\x83\x29\x2a\x29\x7c\xcd\x2c\x30\x53\xed\xb2\xf3\x2a\x39\xd2\xc7\x69\x64\x7f\xaf\x7e\xa7\xf3\xa4\x8e\xa9\x64\xf8\x98\x97\xf8\xff\x00\x00\x00\xff\xff\x9f\x5d\x10\x6a\xc5\x0a\x00\x00")

func staticJavascriptThingsInitJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptThingsInitJs,
		"static/javascript/things.init.js",
	)
}

func staticJavascriptThingsInitJs() (*asset, error) {
	bytes, err := staticJavascriptThingsInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/things.init.js", size: 2757, mode: os.FileMode(420), modTime: time.Unix(1580221996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptThingsPlaceholderClientJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x51\x8f\xdb\x36\x0c\xc7\x9f\xad\x4f\xc1\xf9\xc5\x36\x2e\x70\xae\xc5\x1e\xda\xb8\xde\x1e\x86\xdb\x8a\xa1\xdb\x80\xf5\x1e\x06\x1c\x8a\x40\x67\xd3\xb1\x30\x57\xf2\x51\x74\xaf\x41\x9a\xef\x3e\x48\xb2\x63\xfb\x7a\xdb\xfa\x14\x87\xfc\x91\xfa\x8b\xa4\xf8\x49\x12\x70\xab\xf4\xc1\x42\x39\x7d\x7c\xf9\x02\xa7\x73\x21\xc2\xbf\xbc\xef\x64\x85\xad\xe9\x6a\xa4\x0b\xb2\x32\x8e\xf8\x33\x7c\x5e\x75\x0a\x35\x43\x09\x69\x33\xe8\x8a\x95\xd1\x69\x76\x12\x02\x00\xc0\x1d\x8c\xba\xee\x8d\xf2\x40\xd2\x32\xf7\xbb\xed\xb6\x33\x95\xec\x5a\x63\x79\xf7\xea\xc5\xab\x17\x5b\xd9\xab\xa4\x98\x03\x2c\x76\x0d\x94\x70\x12\x91\x88\x12\xa5\x15\x27\x3b\x58\x65\x8e\xce\x1b\xef\xb3\x28\xa9\x6a\x97\x5e\xc6\xcf\xbc\x01\xa3\xf7\x76\xa8\x2a\xb4\xd6\x7f\x23\x91\x21\x1f\x37\x9d\x60\xf4\xbe\x33\xb2\x86\x72\x8e\x24\xdb\x7b\x24\xf2\xb5\x92\x74\x40\x27\x98\x6c\x9f\x87\x3f\x85\x88\x22\x11\x45\xaa\x81\x34\x18\x72\x42\x59\x1f\xdf\xb3\x64\x84\xef\x4a\xf8\x3e\x3b\x89\xc8\x1f\x40\xc8\x03\x69\xc7\x9f\x43\x8c\xbf\x13\x4b\x1e\xec\xbe\x32\x35\xba\xfa\xfa\x0c\x77\x49\xb0\x26\x1f\x8a\x35\xe5\x6e\xf1\x15\x75\x8b\x9f\x39\x90\xa3\x8c\x74\x99\xf3\x0d\xbc\xbc\xbe\xce\x5c\x97\x56\xe6\x1f\xe0\xe5\xeb\xd7\xd9\x45\xda\x54\x8c\xf4\x94\x38\x77\xb2\x5b\xea\xda\x40\xf2\x11\xad\x95\x87\x85\xdd\x29\x39\x67\xc5\x33\x37\x13\x51\xc4\x74\x84\x29\xf3\xf8\xe3\x2e\x41\xf2\x71\x21\x9e\xd0\xf6\x46\x5b\x9c\xe5\x4f\x5c\x2d\x59\x42\x09\xbf\xbe\xff\xe3\xf7\xbc\x97\x64\x31\x25\xf9\x98\x15\x62\x44\x46\xb7\x1b\x86\x7c\xdf\xa8\x8e\x91\xf6\x84\x76\xe8\xd8\xa6\xce\x77\x51\x35\x77\x7b\x6d\x77\x32\xa1\x92\x5c\xb5\x90\x62\x06\x5f\xd5\x00\xb3\xb9\x47\xce\x71\x2e\xc4\x18\xb7\x18\x93\x46\xaa\x0e\x57\x83\x82\xbe\x9a\xeb\x2c\xff\x1a\x2e\xef\x0d\xf1\x32\xfa\x9b\x83\x07\x52\x50\xce\x6f\xe7\x0a\xe2\xad\x2f\x12\x6d\xc3\xd4\x6f\x7f\x64\xa4\x8f\x65\x0c\x57\xe0\x9a\x34\xc6\x57\x46\x5b\xd3\x61\xde\x99\x43\x1a\xff\x7c\x73\xfb\xd3\xdb\x78\xe3\x52\x65\xab\xfc\xa1\x71\x22\x8a\x56\xf8\x2f\x37\xb7\xf1\x66\x64\xfd\x34\x12\x3e\x40\x09\x1a\x1f\xe1\xaf\xdf\xde\xbd\x65\xee\xff\xc4\x87\x01\x2d\xa7\xd9\x38\x85\x84\x0f\xb9\xac\xeb\x9b\x4f\xa8\xf9\x9d\xb2\x8c\x1a\x29\x8d\xdd\xcb\x8a\x37\xd3\x1b\xf3\xec\xf3\xa0\xaf\x41\x20\x43\x99\xff\x83\xf5\x85\x0c\xac\xff\x5c\x4a\x30\x3d\xea\x51\xbe\xbb\xeb\x06\x98\x06\xbc\xe4\xb2\xa8\xeb\x49\xb1\x2f\xf5\x93\x99\x78\x32\x0f\x61\xc6\xa1\x91\x9d\xc5\xa9\x39\x53\xed\xce\x1b\x21\xa2\xe4\xc9\x30\x2e\xd7\xcf\x68\x5a\xed\x9a\x40\xfb\x19\xba\xfb\x50\x2c\x1c\x95\x19\xfc\x52\x1c\x83\xf2\x0e\xf5\x81\xdb\x89\x68\x0c\x41\xea\x30\x55\x5e\x17\x0a\xde\x04\xbc\x00\x75\x75\x35\xef\x29\x9a\xc3\xef\xd4\xb4\x1b\xec\xa3\xf2\xf7\xa3\xb0\xa4\xf9\xd8\x2f\xa6\xbf\x92\x16\x21\xf6\xfb\x57\xf1\x31\xde\x8d\xe6\x49\x64\xde\x0f\xb6\x4d\xe9\xf2\x86\xee\x09\xe5\xdf\xc5\x2a\x56\xa3\x3a\xb4\xf7\x66\xa0\xd6\x98\xfa\x7f\x13\xd4\xd8\xc8\xa1\xe3\x09\xab\x8c\x66\xa5\x07\x1c\x5f\x5e\xa8\xae\x58\x2c\x97\x4b\xa2\x42\x38\x40\x8c\x8f\x43\x2c\x08\xb7\x11\x0a\x6f\x10\xe7\xcc\x75\xf6\x9f\x00\x00\x00\xff\xff\x2a\x3f\x90\xdb\xde\x06\x00\x00")

func staticJavascriptThingsPlaceholderClientJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptThingsPlaceholderClientJs,
		"static/javascript/things.placeholder.client.js",
	)
}

func staticJavascriptThingsPlaceholderClientJs() (*asset, error) {
	bytes, err := staticJavascriptThingsPlaceholderClientJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/things.placeholder.client.js", size: 1758, mode: os.FileMode(420), modTime: time.Unix(1580222287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/things.api.js": staticJavascriptThingsApiJs,
	"static/javascript/things.init.js": staticJavascriptThingsInitJs,
	"static/javascript/things.placeholder.client.js": staticJavascriptThingsPlaceholderClientJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"javascript": &bintree{nil, map[string]*bintree{
			"things.api.js": &bintree{staticJavascriptThingsApiJs, map[string]*bintree{}},
			"things.init.js": &bintree{staticJavascriptThingsInitJs, map[string]*bintree{}},
			"things.placeholder.client.js": &bintree{staticJavascriptThingsPlaceholderClientJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
