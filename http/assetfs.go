// Code generated by go-bindata.
// sources:
// www/static/javascript/things.api.js
// www/static/javascript/things.init.js
// www/static/javascript/things.placeholder.client.js
// www/static/css/things.css
// DO NOT EDIT!

package http

import (
	"github.com/whosonfirst/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptThingsApiJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xdd\x6a\xdc\x3c\x10\xbd\xb6\x9f\x62\x3e\xdf\x58\xe6\x33\x4e\x08\xbd\xc9\x6e\xdd\xbb\xd0\x52\xd2\x1f\x9a\x14\x0a\xa5\x2c\xaa\x35\xbb\x11\xb8\x92\x33\x1a\xe7\x87\xcd\xbe\x7b\x91\x64\x7b\xbd\xd9\xb4\xf4\x4e\x1a\x9d\x39\x3a\x73\x66\xa4\x3b\x49\xc0\x37\xda\x6c\x1c\xd4\xe3\xe2\xe9\x09\xb6\xbb\x65\x9a\xc6\x6d\x25\x3b\x0d\x35\x88\x75\x6f\x1a\xd6\xd6\x88\x62\x9b\xa6\x00\x00\x3e\x15\x8d\xea\xac\x36\x0c\x35\xb4\xb6\x91\xfe\xbc\xb2\xa4\x37\xda\x2c\x03\x66\x02\x3a\x6c\xd7\x50\xc3\x36\x4d\x93\x5c\x2a\x95\x2f\x60\xe2\x53\xd8\xe9\x86\xdd\x4a\xab\x12\x18\x1f\xb8\x04\x6b\x56\xae\x6f\x1a\x74\x2e\xac\x91\xc8\x92\xbf\x35\x19\xd9\x82\xb2\x40\x97\x24\xf9\x3e\x3f\x5f\xc0\x8c\xcc\x9f\x19\xcb\x98\x2f\x22\x6d\x4c\xf7\x85\x4d\x3c\x8e\x69\x35\x72\xbd\xbf\xfa\xf4\xb1\x72\x4c\xda\x6c\xf4\xfa\x51\x84\x70\xb1\x8c\xd8\x7d\x86\x35\xab\xd6\x4a\x05\xf5\x5e\x3f\xb9\x2e\x88\x4b\x82\x32\x49\x1b\xf4\x76\x90\xeb\xaa\xb8\x59\xa6\x49\x92\x26\x89\x5e\x83\x88\x81\x8a\x50\xaa\xc7\x2b\x96\x8c\xf0\x5f\x0d\xaf\x0a\x5f\x86\xbf\x80\x90\x7b\x32\x1e\xbf\x8b\x39\x51\xa3\xe4\xde\xad\x1a\xab\xd0\xb7\x28\x30\x7c\xcf\x63\x34\xff\xb1\x3c\x44\xf9\x42\x8f\x50\xd7\xf8\xc0\x11\x39\xc8\x10\x73\xce\xd7\x70\x76\x7a\x5a\xf8\xa6\x1f\x84\xdf\xc0\xd9\xf9\x79\x31\x49\x1b\xdb\x20\xb6\xb9\x3f\xce\x17\x73\x5d\x25\xe4\xbf\xd0\x39\xb9\x99\xc5\xbd\x92\x9d\xf7\xef\xe5\xca\x98\x1e\x61\xe4\xf6\xfa\x49\xde\xcf\x74\x13\xba\xce\x1a\x87\x83\xf2\x64\x68\xc2\x84\x56\x92\xe5\xd8\xb2\x4e\x92\x43\x41\xf2\x7e\xba\x6c\x3f\x3e\xc2\x03\x43\x7c\x07\x8d\xe4\xe6\x06\x04\x16\x70\x54\x13\x16\x7b\x65\xc3\x8c\x1c\xb7\x7d\x2d\x75\x8b\x07\x8d\xc7\xe0\xce\x21\xcb\x1f\xd3\xe5\x4f\x4b\x3c\xcf\xfe\xe7\xe4\x9e\xfc\xfb\x9b\x5e\xda\xff\x90\x9d\x48\xa5\x4e\xb2\x71\x90\xa3\x95\x69\x92\x34\xd6\x38\xdb\x62\xd5\xda\x8d\xc8\xde\x5e\x5c\x67\x65\x4f\xba\x18\x27\x84\xf0\x16\x6a\x30\x78\x0f\xdf\x3e\x5c\xbe\x63\xee\xbe\xe0\x6d\x8f\x8e\x45\x31\x4c\x06\xe1\x6d\x25\x95\xba\xb8\x43\xc3\x97\xda\x31\x1a\x24\x91\xf9\x69\xcf\xca\x71\xee\x03\xf6\x65\x60\xa8\x23\x22\xa3\x55\x7f\xc1\x06\x33\x22\x36\x2c\xe7\x12\x6c\x87\x46\x64\x9f\xbf\x5e\x67\xa5\x2f\xbd\x04\xa6\x1e\x27\x2e\x87\x46\x89\xe9\xd9\x0e\x79\xc1\xb7\x67\x0d\x7e\xd6\xdc\x38\x80\xb0\x96\xad\xc3\xd1\xe9\xd1\xe8\x5d\x99\x8e\x3f\xc3\x7e\x56\xc3\x8f\x35\x7c\x62\xbb\xc2\x9b\xf4\x3b\x00\x00\xff\xff\x5e\xff\x93\x0a\x2b\x05\x00\x00")

func staticJavascriptThingsApiJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptThingsApiJs,
		"static/javascript/things.api.js",
	)
}

func staticJavascriptThingsApiJs() (*asset, error) {
	bytes, err := staticJavascriptThingsApiJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/things.api.js", size: 1323, mode: os.FileMode(420), modTime: time.Unix(1580224613, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptThingsInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x13\x3e\xcb\xbf\x82\xe0\x49\x42\x1c\xed\x02\xef\x51\x9b\x43\xde\x36\xed\x06\xdd\xee\x02\x69\x80\xa2\x08\x16\x01\x4d\x8d\x6d\x36\x34\xa9\x92\x54\x52\x63\x91\xff\x5e\x70\x48\x49\xb4\x64\x2b\xce\x25\x91\xc9\x79\x86\x33\xcf\x7c\xbe\x08\x55\xeb\x97\x92\xd5\xf5\xcd\x33\x28\xf7\x45\x58\x07\x0a\x4c\x4e\xa5\x66\x35\x5d\x92\x75\xab\xb8\x13\x5a\x11\xff\x3b\x07\x2f\x53\xfc\x58\x2c\x08\x21\xe4\x99\x19\xd2\x48\x72\x45\x6a\xcd\xdb\x1d\x28\x57\x6e\xc0\xdd\x48\xf0\x9f\xff\xdf\xdf\xd6\x39\x6d\x24\xe3\x40\x8b\x6a\x90\xff\xa7\x05\xb3\x9f\x83\xa0\x00\x2d\x2a\x0f\xe8\x51\x06\x6c\x2b\x9d\x9d\xc3\x45\x11\xff\x58\x87\x72\x5b\xa1\x36\x8f\x6b\x6d\x76\x73\x40\x94\xba\xf4\x52\x53\xac\x64\x2b\x98\x75\x30\x80\x51\x6c\x8a\x5e\xe9\x7a\xd6\xd5\x00\xf6\x52\x53\xac\x6d\x57\x3b\xe1\xde\x46\x07\xb9\xc8\xd7\x01\x67\x41\x0f\x67\x8a\x9f\xe3\x42\x90\x3b\x08\x95\x01\x0b\xae\xa3\xaf\x4b\x83\xdc\x07\x3f\x1b\xfc\x2b\x0d\xec\xf4\x33\x5c\x3b\x67\xc4\xaa\x75\x90\xd3\x9a\x39\x76\xf9\xb2\xd5\x56\xab\xb5\x30\xd6\x5d\x8a\xda\xab\x4d\x31\xcf\x4c\xb6\x40\xae\x08\xa5\xfd\x39\x52\x58\x0a\xa5\xc0\xdc\xc3\xbf\x2e\x5e\x76\xb7\xde\x88\xd2\xba\xbd\x84\xb2\x16\xb6\x91\xcc\xf3\x4a\x95\x56\xe0\x35\x2c\xb2\x18\xfc\x80\xff\x7c\xff\xfb\x97\x4e\x79\x77\x31\x83\xc5\x84\x9b\x0a\xac\xa4\xe6\x4f\x5e\xa2\x91\xa9\xbd\x19\xd2\xf3\x1a\xc2\x85\x7f\x52\x9e\x4b\xad\xb8\x14\xfc\x69\x44\x58\x36\x50\x99\x17\x68\x95\x6b\x8d\x22\x6b\x26\x2d\x04\x4d\xaf\x63\x7d\x21\xae\x27\xf4\xa1\x6c\xe6\x63\x54\x43\x23\xb8\xb3\x8f\xa2\x26\x57\x49\xd6\xf9\x20\x9f\x11\x92\x03\x74\xc3\x8c\x85\x5b\xe5\xf2\xe1\xb4\x40\x82\x30\x99\x42\x4c\xc6\x31\xc4\x08\x99\x3d\xf9\xb1\xc8\x82\x4d\x5d\xee\x68\xf5\x68\x5b\xce\xc1\xda\xd4\x74\x63\x1b\xcf\x46\xc6\xb5\xb2\x5a\x42\x29\xf5\x26\xa7\xdf\x7e\xbb\xfe\x8b\x2e\x89\xbf\xab\xb2\x6c\x91\x8d\xc9\x8a\x7c\x4f\x1f\x00\x63\xb4\x49\xd5\x83\x31\x53\xf5\x37\x77\x77\xdf\xee\xe8\x92\xf8\xcb\x23\xfa\xfd\x49\x7c\x21\x7c\xa0\x8b\xb6\x64\x8d\xf0\x3d\x31\x21\x63\x89\x24\x2c\x13\xd7\x96\xbd\x15\x45\x6f\xdf\x2b\xe1\xcc\xf1\x2d\xc9\xa1\x88\xa4\x1c\x58\xf3\xc7\xf5\xcf\xde\x96\x4e\x7e\xe4\xea\xeb\xe2\x68\x6e\x24\xc9\x86\x31\x37\xec\xe5\x11\xcd\x4c\x9d\x57\x6c\x07\x4b\x22\x6a\xac\xcf\x13\x39\xdd\x25\xfd\x9b\x55\x31\x57\x75\x5d\x61\xcc\x54\xee\x3d\x72\x48\x6e\x89\x14\x4f\x40\xd8\x4a\xb7\x8e\x50\x72\x41\xbc\x8d\x98\x52\x49\x1e\xd9\x37\x33\x15\xbd\xaa\x16\xd9\x87\x0f\x69\xfe\x4d\x4a\x7d\x71\x18\xf7\xfb\xcf\xb7\x5f\x7f\xed\xb1\xa7\x89\x1c\x46\xcb\x90\xa6\xe1\x08\x99\xf4\x72\x5c\xb7\xca\xfb\xd5\xd1\x26\x41\x6d\xdc\xb6\xaf\x0d\x29\xec\x41\xa3\xe6\x06\x98\x83\xd8\x63\x73\xda\x62\x57\xcd\xbc\xd4\xc8\x59\x2e\x99\xb5\x74\x49\xa8\x05\x09\xdc\x5d\xee\x40\xb5\x34\xd4\xdc\x5a\x1b\x92\x7b\xe5\xe2\xea\x63\x45\x04\xf9\x14\x8c\xa8\x88\xb8\xb8\x40\xbb\xfa\x26\x3d\xd8\xf5\x20\xbe\x4f\xca\x04\x2b\xdb\x94\xa2\xae\x86\x33\x1f\x05\x3c\x8d\xe1\x18\x46\x39\xe3\xe0\xf6\x4d\xb8\xec\x7f\x4d\x74\x76\x43\xf1\xe1\x7b\x95\x18\x22\x85\x02\xb6\x09\xd8\xf8\x1d\x91\xc3\x4d\xfc\x7a\xf8\xd8\x23\xc5\x9a\xe4\xf1\xb4\x54\x20\x36\xdb\x95\x6e\xcd\x56\xeb\x1a\x0b\x39\xa4\x56\xd3\xda\x6d\x4e\x49\xee\x33\xe8\xa8\x2c\x3a\x42\x2e\x08\x2d\x68\xdf\x30\xc2\xbf\xc4\xf2\xf4\xa5\x1d\xe3\x46\x9f\xf1\x4a\x2f\x77\xfa\x85\xa9\x72\xa9\x39\x93\xc2\xed\xc7\xba\xc7\xf7\xa8\x73\xd0\x36\x55\x84\x11\x9f\xa8\x19\x99\x18\x84\xde\x63\x9f\x81\x8d\xd0\xea\x94\x75\xe1\x36\xda\xd6\x37\xc7\x53\xd6\x99\x93\x5e\xc6\xeb\xa3\x4e\xfa\x74\xb1\xce\xf4\xdb\x55\x80\xff\xad\x85\xca\x7d\x35\x14\x69\x5a\x09\x07\xbb\x99\xe2\x92\xa2\x77\xd8\x4b\xbe\xa3\x9b\x9c\x0b\xf1\x0e\xd0\xe5\x60\x6f\xdc\x4c\x07\x3c\x6b\x1a\x50\xf5\x4f\x5b\x21\xeb\x7c\x64\xa6\xef\x87\x5f\x75\x0d\xf9\x80\xee\x9d\x43\xec\x91\xf1\x0e\x58\xde\xd8\x58\x90\x1c\x28\x1d\x33\x1b\x70\x55\x3c\xc4\x8a\x06\x79\xe6\x84\xcf\x92\x82\x7f\x1b\x84\xbe\x22\x6c\x98\x31\xc3\x60\xa9\x70\x76\xa6\xd3\xe9\xc8\x6c\xc6\x36\x97\x52\xe2\xfd\xec\x66\xdb\xfb\x57\xf9\x93\x9b\xdd\x70\x93\x3e\xe6\x5f\x2f\xe6\x06\x5c\x37\xbc\xc6\xe3\xa0\xf1\xab\x9b\x50\x4d\xeb\x0e\x63\x41\xba\x19\x30\x8e\x45\xb2\x14\x81\x1c\x96\x21\x5f\x21\xfe\x38\xce\x08\xf2\x89\xfc\xaf\xdb\x03\x02\x75\xc8\x44\x1c\x1c\xb3\x4b\x92\x87\xa4\x03\x0a\xcf\x3d\xba\x5a\xf4\xe8\x53\x1b\xd0\xa9\xb5\xc3\x98\x5e\x43\xb2\xb5\xc5\x8d\x07\x1b\xfe\x56\xcb\x1a\x4c\xc9\xa5\xf0\x81\xb1\xc0\x0c\xdf\xe6\xf3\x7b\xcf\x1b\x1b\xcf\x9f\xf7\xbf\xd0\x25\x84\x0c\xe8\x16\xad\xd7\xa2\x5a\xfc\x17\x00\x00\xff\xff\x15\xfb\x88\x0c\x78\x0e\x00\x00")

func staticJavascriptThingsInitJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptThingsInitJs,
		"static/javascript/things.init.js",
	)
}

func staticJavascriptThingsInitJs() (*asset, error) {
	bytes, err := staticJavascriptThingsInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/things.init.js", size: 3704, mode: os.FileMode(420), modTime: time.Unix(1580227339, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptThingsPlaceholderClientJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x51\x8f\xdb\x36\x0c\xc7\x9f\xad\x4f\xc1\xf9\xc5\x36\x2e\x70\xae\xc5\x1e\xda\xb8\xde\x1e\x86\xdb\x8a\xa1\xdb\x80\xf5\x1e\x06\x1c\x8a\x40\x67\xd3\xb1\x30\x57\xf2\x51\x74\xaf\x41\x9a\xef\x3e\x48\xb2\x63\xfb\x7a\xdb\xfa\x14\x87\xfc\x91\xfa\x8b\xa4\xf8\x49\x12\x70\xab\xf4\xc1\x42\x39\x7d\x7c\xf9\x02\xa7\x73\x21\xc2\xbf\xbc\xef\x64\x85\xad\xe9\x6a\xa4\x0b\xb2\x32\x8e\xf8\x33\x7c\x5e\x75\x0a\x35\x43\x09\x69\x33\xe8\x8a\x95\xd1\x69\x76\x12\x02\x00\xc0\x1d\x8c\xba\xee\x8d\xf2\x40\xd2\x32\xf7\xbb\xed\xb6\x33\x95\xec\x5a\x63\x79\xf7\xea\xc5\xab\x17\x5b\xd9\xab\xa4\x98\x03\x2c\x76\x0d\x94\x70\x12\x91\x88\x12\xa5\x15\x27\x3b\x58\x65\x8e\xce\x1b\xef\xb3\x28\xa9\x6a\x97\x5e\xc6\xcf\xbc\x01\xa3\xf7\x76\xa8\x2a\xb4\xd6\x7f\x23\x91\x21\x1f\x37\x9d\x60\xf4\xbe\x33\xb2\x86\x72\x8e\x24\xdb\x7b\x24\xf2\xb5\x92\x74\x40\x27\x98\x6c\x9f\x87\x3f\x85\x88\x22\x11\x45\xaa\x81\x34\x18\x72\x42\x59\x1f\xdf\xb3\x64\x84\xef\x4a\xf8\x3e\x3b\x89\xc8\x1f\x40\xc8\x03\x69\xc7\x9f\x43\x8c\xbf\x13\x4b\x1e\xec\xbe\x32\x35\xba\xfa\xfa\x0c\x77\x49\xb0\x26\x1f\x8a\x35\xe5\x6e\xf1\x15\x75\x8b\x9f\x39\x90\xa3\x8c\x74\x99\xf3\x0d\xbc\xbc\xbe\xce\x5c\x97\x56\xe6\x1f\xe0\xe5\xeb\xd7\xd9\x45\xda\x54\x8c\xf4\x94\x38\x77\xb2\x5b\xea\xda\x40\xf2\x11\xad\x95\x87\x85\xdd\x29\x39\x67\xc5\x33\x37\x13\x51\xc4\x74\x84\x29\xf3\xf8\xe3\x2e\x41\xf2\x71\x21\x9e\xd0\xf6\x46\x5b\x9c\xe5\x4f\x5c\x2d\x59\x42\x09\xbf\xbe\xff\xe3\xf7\xbc\x97\x64\x31\x25\xf9\x98\x15\x62\x44\x46\xb7\x1b\x86\x7c\xdf\xa8\x8e\x91\xf6\x84\x76\xe8\xd8\xa6\xce\x77\x51\x35\x77\x7b\x6d\x77\x32\xa1\x92\x5c\xb5\x90\x62\x06\x5f\xd5\x00\xb3\xb9\x47\xce\x71\x2e\xc4\x18\xb7\x18\x93\x46\xaa\x0e\x57\x83\x82\xbe\x9a\xeb\x2c\xff\x1a\x2e\xef\x0d\xf1\x32\xfa\x9b\x83\x07\x52\x50\xce\x6f\xe7\x0a\xe2\xad\x2f\x12\x6d\xc3\xd4\x6f\x7f\x64\xa4\x8f\x65\x0c\x57\xe0\x9a\x34\xc6\x57\x46\x5b\xd3\x61\xde\x99\x43\x1a\xff\x7c\x73\xfb\xd3\xdb\x78\xe3\x52\x65\xab\xfc\xa1\x71\x22\x8a\x56\xf8\x2f\x37\xb7\xf1\x66\x64\xfd\x34\x12\x3e\x40\x09\x1a\x1f\xe1\xaf\xdf\xde\xbd\x65\xee\xff\xc4\x87\x01\x2d\xa7\xd9\x38\x85\x84\x0f\xb9\xac\xeb\x9b\x4f\xa8\xf9\x9d\xb2\x8c\x1a\x29\x8d\xdd\xcb\x8a\x37\xd3\x1b\xf3\xec\xf3\xa0\xaf\x41\x20\x43\x99\xff\x83\xf5\x85\x0c\xac\xff\x5c\x4a\x30\x3d\xea\x51\xbe\xbb\xeb\x06\x98\x06\xbc\xe4\xb2\xa8\xeb\x49\xb1\x2f\xf5\x93\x99\x78\x32\x0f\x61\xc6\xa1\x91\x9d\xc5\xa9\x39\x53\xed\xce\x1b\x21\xa2\xe4\xc9\x30\x2e\xd7\xcf\x68\x5a\xed\x9a\x40\xfb\x19\xba\xfb\x50\x2c\x1c\x95\x19\xfc\x52\x1c\x83\xf2\x0e\xf5\x81\xdb\x89\x68\x0c\x41\xea\x30\x55\x5e\x17\x0a\xde\x04\xbc\x00\x75\x75\x35\xef\x29\x9a\xc3\xef\xd4\xb4\x1b\xec\xa3\xf2\xf7\xa3\xb0\xa4\xf9\xd8\x2f\xa6\xbf\x92\x16\x21\xf6\xfb\x57\xf1\x31\xde\x8d\xe6\x49\x64\xde\x0f\xb6\x4d\xe9\xf2\x86\xee\x09\xe5\xdf\xc5\x2a\x56\xa3\x3a\xb4\xf7\x66\xa0\xd6\x98\xfa\x7f\x13\xd4\xd8\xc8\xa1\xe3\x09\xab\x8c\x66\xa5\x07\x1c\x5f\x5e\xa8\xae\x58\x2c\x97\x4b\xa2\x42\x38\x40\x8c\x8f\x43\x2c\x08\xb7\x11\x0a\x6f\x10\xe7\xcc\x75\xf6\x9f\x00\x00\x00\xff\xff\x2a\x3f\x90\xdb\xde\x06\x00\x00")

func staticJavascriptThingsPlaceholderClientJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptThingsPlaceholderClientJs,
		"static/javascript/things.placeholder.client.js",
	)
}

func staticJavascriptThingsPlaceholderClientJs() (*asset, error) {
	bytes, err := staticJavascriptThingsPlaceholderClientJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/things.placeholder.client.js", size: 1758, mode: os.FileMode(420), modTime: time.Unix(1580222287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticCssThingsCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x6e\xc3\x20\x0c\x86\xcf\xf0\x14\x48\x3d\x53\xb5\xd2\x7a\x21\x4f\x93\x82\x1b\xd0\x1c\xcc\x8c\xd3\x24\x9a\xfa\xee\x13\xd9\xd4\x4e\x8a\xb6\x23\xfe\x84\xff\xcf\xff\xe1\x63\x02\x5e\xcd\xa7\x56\x37\xa4\x5e\x1c\xc2\x4d\x3a\xfd\xd0\xfa\x58\x01\xc1\x8b\x1d\x21\x4f\x0d\x97\x3e\x84\x94\x07\x67\x4e\x65\xe9\xb4\x1a\x7b\x1e\x52\x7e\xbd\x16\x1b\x21\x0d\x51\xdc\xe5\x74\x8f\x3f\x93\x39\x05\x89\x6d\x30\x77\x5a\xd1\x1d\xf8\x86\x34\xbb\xea\x99\x10\xbb\xe7\x46\xdb\x22\xdd\xf9\x6d\x5b\x74\x25\x0e\xc0\x56\xa8\x38\x73\x2e\x8b\xa9\x84\x29\x98\x83\xf7\xfe\x05\xaf\x24\x42\xe3\x8e\x2b\xb5\xd3\xc6\xd4\xcc\xff\xff\xf6\xe4\x9b\xc6\x9f\x94\xb7\xe3\x76\x99\xbf\x7a\x39\x5e\x18\xc6\x4e\x2b\x4c\x55\x6c\x95\x15\xc1\xca\x5a\xc0\x99\x4c\x19\xf6\x95\x62\x72\xb1\x75\xb2\x19\xf6\xfe\x7d\x60\x9a\x72\xb0\x9e\x90\xd8\x7d\x67\x3f\xf4\x57\x00\x00\x00\xff\xff\x78\x4b\x06\x6b\x9e\x01\x00\x00")

func staticCssThingsCssBytes() ([]byte, error) {
	return bindataRead(
		_staticCssThingsCss,
		"static/css/things.css",
	)
}

func staticCssThingsCss() (*asset, error) {
	bytes, err := staticCssThingsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/css/things.css", size: 414, mode: os.FileMode(420), modTime: time.Unix(1580226032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/things.api.js": staticJavascriptThingsApiJs,
	"static/javascript/things.init.js": staticJavascriptThingsInitJs,
	"static/javascript/things.placeholder.client.js": staticJavascriptThingsPlaceholderClientJs,
	"static/css/things.css": staticCssThingsCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"things.css": &bintree{staticCssThingsCss, map[string]*bintree{}},
		}},
		"javascript": &bintree{nil, map[string]*bintree{
			"things.api.js": &bintree{staticJavascriptThingsApiJs, map[string]*bintree{}},
			"things.init.js": &bintree{staticJavascriptThingsInitJs, map[string]*bintree{}},
			"things.placeholder.client.js": &bintree{staticJavascriptThingsPlaceholderClientJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
